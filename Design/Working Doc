Working Document – CP2406 Car Traffic Simulator by Aidan Megee

Problem Specification:
Design a Car Traffic Simulation that tracks a car moving from a road to another road with traffic lights positioned at the end of the first road. The program will be used to simulate traffic on roads going through traffic lights. The idea is that the car moves along the first road, then at the end of the first road, the traffic lights will display either green or red, if the traffic lights display red, the car stays in the same position on that road until the traffic lights turn green to move to the second road. The second road does not have any traffic lights.
To start if with, I had to figure out how all the different classes were going to work together. To do this I decided to write small blocks of pseudocode for each class. E.g. Car must track which road its on along with what position on each road. Traffic light has two states, green and red or stop and go, along with a rate of change depending on what random number the program is to spit out. The Road has the next road its connected to and a length. 
After writing small blocks of pseudo code, I decided to draw something like a UML diagram where I could visualise which classes go to where or what class extends what class. For example, the road class is to extend the Car class and the Traffic Light class extends the Road class and so on.

Approaching the problem:
Going into writing the program for the Car Traffic Simulator, I decided to work on the project bit by bit, first working on the Car and Road classes so I didn’t become confused over what code goes where. I then made test classes for the Car and Road class to check that the Car position moves by 1 and that the car tracks what road it is on. I then wrote code to test that road connects to another road and tested the road length. 

Creating the Sub-Classes:
After the Road and Car class were completed along with their test code. I then went on to complete the Traffic Light class. I started to run into some issues here and had trouble with figuring out how to write the code. I tried using Boolean values for green and red, although this didn’t work out so well because when printing whether the traffic light was red or green it would print true or false which isn’t helpful in this project. I then decided to use Strings and set the colour green/colour red to “Green” and “Red” which made a huge difference. The rate of change for the Traffic Light class was also a bit of a struggle, I knew how I wanted to write it using a random number generated between two values, in this case 0.01 and 0.99 although I wasn’t sure of the syntax. After some research going through coding resources on learnJCU I found out how I wanted to write the code for this random number generator in a way I could understand, and it worked exactly how I wanted it to. I then proceeded to write test code for the Traffic Light class to test the String values and Min and Max Rate of Change. 

Implementing Main Simulation Class:
After completing all three out of four classes needed for the project along with the test code. I started on the MainSimulation Class of my project which is where everything is simulated. I started to write out main() and using a while loop so the car keeps increments by 1 each time the car position is less than 4. When the Car is at position 4 on road 1, the car would then move to road 2 but the car can only move to road 2 If the traffic light is green, this is where problems started to occur. I was unable to use Boolean values here, so I had to find a way to make the car move if the Traffic Lights are NOT red. Currently still having issues with the Car moving to Road 2 even if the Traffic Light is red. 
After the Car moves to the second road, I implemented another while loop and another position on road value so I could track the car on the second road for readability purposes.
